version: 0.2

phases:
  pre_build:
    commands:
      - echo "Assuming role into Pooja account..."
      - |
        CREDS=$(aws sts assume-role \
          --role-arn arn:aws:iam::992313771121:role/CrossAccountDeploymentRole \
          --role-session-name infra-deploy)
        export AWS_ACCESS_KEY_ID=$(echo $CREDS | jq -r '.Credentials.AccessKeyId')
        export AWS_SECRET_ACCESS_KEY=$(echo $CREDS | jq -r '.Credentials.SecretAccessKey')
        export AWS_SESSION_TOKEN=$(echo $CREDS | jq -r '.Credentials.SessionToken')

  build:
    commands:
      - echo "Deploying VPC to Pooja account"
      - |
        aws cloudformation deploy \
          --template-file cloudformation/vpc.yaml \
          --stack-name SharedVPC \
          --capabilities CAPABILITY_NAMED_IAM

      - echo "Deploying ECS Cluster + ECS Service + ALB to Pooja account"
      - |
        VPC_ID=$(aws cloudformation describe-stacks --stack-name SharedVPC \
          --query "Stacks[0].Outputs[?OutputKey=='VpcId'].OutputValue" --output text)

        SUBNET1=$(aws cloudformation describe-stacks --stack-name SharedVPC \
          --query "Stacks[0].Outputs[?OutputKey=='PublicSubnet1Id'].OutputValue" --output text)

        SUBNET2=$(aws cloudformation describe-stacks --stack-name SharedVPC \
          --query "Stacks[0].Outputs[?OutputKey=='PublicSubnet2Id'].OutputValue" --output text)

        aws cloudformation deploy \
          --template-file cloudformation/ecs-cluster.yaml \
          --stack-name ECSClusterStack \
          --capabilities CAPABILITY_NAMED_IAM \
          --parameter-overrides VpcId=$VPC_ID Subnet1=$SUBNET1 Subnet2=$SUBNET2

      - echo "Unsetting assumed role to switch back to Main account"
      - |
        unset AWS_ACCESS_KEY_ID
        unset AWS_SECRET_ACCESS_KEY
        unset AWS_SESSION_TOKEN

      - echo "Deploying ECR Repositories in Main Account"
      - |
        aws cloudformation deploy \
          --template-file cloudformation/ecr-repos.yaml \
          --stack-name MicroservicesECRRepos \
          --capabilities CAPABILITY_NAMED_IAM \
          --parameter-overrides PullerAccountId=992313771121

      - echo "Triggering image build for all microservices"
      - |
        for SERVICE in user-service order-service payment-service; do
          echo "Triggering build for $SERVICE"
          aws codebuild start-build --project-name Build-$SERVICE > build.json
          BUILD_ID=$(jq -r '.build.id' build.json)

          echo "Waiting for $SERVICE to finish..."
          while true; do
            STATUS=$(aws codebuild batch-get-builds --ids "$BUILD_ID" | jq -r '.builds[0].buildStatus')
            echo "Status for $SERVICE: $STATUS"
            if [ "$STATUS" = "SUCCEEDED" ]; then break; fi
            if [ "$STATUS" = "FAILED" ] || [ "$STATUS" = "FAULT" ] || [ "$STATUS" = "STOPPED" ]; then
              echo "$SERVICE build failed!"
              exit 1
            fi
            sleep 10
          done
        done

artifacts:
  files:
    - '**/*'

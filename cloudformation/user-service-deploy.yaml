AWSTemplateFormatVersion: "2010-09-09"
Description: Deploy user-service ECS Service + ALB

Parameters:
  ClusterName:
    Type: String
  VpcId:
    Type: String
  Subnet1:
    Type: String
  Subnet2:
    Type: String
  ContainerImage:
    Type: String

Resources:
  TaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties:
      Family: user-service-task
      Cpu: '256'
      Memory: '512'
      NetworkMode: awsvpc
      RequiresCompatibilities:
        - FARGATE
      ExecutionRoleArn: arn:aws:iam::992313771121:role/ECSExecutionRole
      TaskRoleArn: arn:aws:iam::992313771121:role/ECSTaskRole
      ContainerDefinitions:
        - Name: user-service
          Image: !Ref ContainerImage
          PortMappings:
            - ContainerPort: 5000

  ALB:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Name: user-service-alb
      Scheme: internet-facing
      Subnets:
        - !Ref Subnet1
        - !Ref Subnet2
      SecurityGroups: []

  TargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      Name: user-service-tg
      Port: 5000
      Protocol: HTTP
      VpcId: !Ref VpcId
      TargetType: ip
      HealthCheckPath: /

  Listener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions:
        - Type: forward
          TargetGroupArn: !Ref TargetGroup
      LoadBalancerArn: !Ref ALB
      Port: 80
      Protocol: HTTP

  ECSService:
    Type: AWS::ECS::Service
    DependsOn: Listener
    Properties:
      Cluster: !Ref ClusterName
      LaunchType: FARGATE
      DesiredCount: 1
      NetworkConfiguration:
        AwsvpcConfiguration:
          AssignPublicIp: ENABLED
          Subnets:
            - !Ref Subnet1
            - !Ref Subnet2
      TaskDefinition: !Ref TaskDefinition
      LoadBalancers:
        - ContainerName: user-service
          ContainerPort: 5000
          TargetGroupArn: !Ref TargetGroup

Outputs:
  ALBEndpoint:
    Description: Public URL
    Value: !GetAtt ALB.DNSName
